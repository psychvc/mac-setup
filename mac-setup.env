#!/usr/bin/env bash
# Do not store secrets here, such as AWS, GITHUB_PASSWORD, GPG_PASSPHRASE, etc.
# A copy of this file should exist in your $HOME folder to be edited/customized by you before
# being run by mac-setup.zsh (in the same $HOME folder) to define variables in macOS under Zsh shell.
# This mac-setup.env (sample file) for macOS at https://github.com/wilsonmar/mac-setup/blob/master/mac-setup.env
# as described at https://wilsonmar.github.io/mac-setup

# CAUTION: No spaces around = sign.
export ENV_VER="v070 + Blender :mac-setup.env"  # git commit -m
echo "At mac-setup.env $ENV_VER ..."

export RUNTYPE="fromscratch"  # fromscratch, upgrade, remove, keep, cleanup

# IMPORTANT: Change these packages to what your want installed:
export MACOS_APPS_TO_REMOVE="iMovie GarageBand Keynote Numbers Pages"

# Brew installs into either the root Application folder or the Application folder under user's $HOME folder.
# Apps to install (adding with .app) within ROOT folder /Applications (containing default apps from Apple):
export ROOT_APPS_TO_INSTALL="Blender hiddenbar Kindle Microsoft-Edge Microsoft-Teams Noir PingPlotter Telegram zoom"
   # brew install --cask ChronoSync # to download a .dmg file which runs in Background.
       # See https://www.youtube.com/watch?v=tBV50ONzQOA
   # Blender for 3D modeling
   # "Calculator Plus"  <= ???
   # CopyClip
   # "Delete Apps" <= ???
   # "Elgato Stream Deck"
   # "Hidden Bar" <= hiddenbar
   # Keybase not installed because it's owned by Zoom, which pose privacy concerns
   # Kindle
   # Logos # Bible app
   # "Microsoft Edge" <= Microsoft-Edge
   # "Microsoft Remote Desktop" <= Microsoft-Remote-Desktop
   # "Microsoft Teams (work or school)" <= Microsoft-Teams
   # Noir
   # NordVPN
   # "Parallels Desktop"
   # PingPlotter
   # Pluralsight
   # PowerShell
   # "Prime Video.app" <= PrimeVideo
   # "The Unarchiver" \ RAR Extractor -
   # ServiceStudio  (from Outsystems)
   # Speedtest (of network speed)
   # Telegram
   # "VMware Fusion"
   # WhatsApp not installed due to the flood of slam messages
   # Wireshark
   # "Zoom.us" <= zoom
      # Skype is dead.
      # DiffMerge only avialable for Intel https://sourcegear.com/diffmerge/downloads.html

# Apps to install from --cask (adding with .app) within user $HOME/Applications:
export HOME_APPS_TO_INSTALL="balenaetcher Brave Claude Docker Firefox KeepassXC OBS Slack Warp"
   # 1Password7 for secrets (v8 not installed because it's now on network)
   # android-file-transfer
   # Anki for flash cards
   # balenaetcher for etching USB chips to create boot drives
   # "Brave Browser" install brave
   # "Camtasia 2023" to edit movies
   # "Chrome Apps"
   # Claude = Claude AI Desktop
   # Docker
   # "GitHub Desktop" is not used.
   # "Google Chrome"
   # google-cloud-sdk
   # Handbrake to rip DVD to mp4 at higher resolution than VLC
      # https://handbrake.fr/docs/en/latest/get-handbrake/download-and-install.html
   # Hyper - Terminal
   # Kaleidoscope ksdiff for comparing text within Git - https://kaleidoscope.app/setup-guides/git-command-line-client
   # Keybase - discredited from China control
   # KeePassXC
   # LibreOffice - free open source alternative to Microsoft Office & Google (but more clunky to use)
   # MacDroid, (AnyDroid is not anydo)
   # Microsoft-Office  Microsoft-Teams  Microsoft-Visual-Studio-Code"
   # OBS video recorder, see https://obsproject.com/kb/quick-start-guide
   # Plex to view media on local media servers like a Roku
   # Signal
   # Slack
   # Sublime Text
   # Textual
   # TextEditor/IDE: MacVim  PyCharm
   # Terminal CLI: "iTerm2", Warp https://www.youtube.com/watch?v=d4bTkiftBOk & https://www.youtube.com/watch?v=NfggT5enF4o&t=3m40s
   # "Visual Studio Code"
   # Warp  -  Termianl
   # Others:  HandMiror Onyx (clean & fix) HazeOver (dim background)
export APT_TO_INSTALL=""
export FLEX_TO_INSTALL=""
export BREWS_TO_INSTALL="docker-compose fzf git jq yq libdvdcss node safety speedtest-cli shellcheck wget"
   # curl is not installed by brew because macOS already provides this software.
   # docker-compose - a Docker plugin. For Docker to find it,
      # add "cliPluginsExtraDirs" to ~/.docker/config.json:
      # "cliPluginsExtraDirs": [ "/opt/homebrew/lib/docker/cli-plugins" ]
   # git for fun
   # jq
   # fzf for fuzzy find (search) - https://github.com/junegunn/fzf
   # gh for github CLI utilities
   # lazygit: https://www.youtube.com/watch?v=CPLdltN7wgE
   # libdvdcss to rip copy-protected DVDs using Handbrake
   # node (for NodeJs)
   # ollama server
   # prometheus server
      # Lingering /opt/homebrew/etc/prometheus.args & /opt/homebrew/etc/prometheus.yml
   # safety
   # shellcheck to evaluate bash shell scripts (not zsh scripts)
   # speedtest-cli to measure internet bandwidth using speedtest.net - https://github.com/sivel/speedtest-cli
   # temporal - https://temporal.io/
   # tor (monthly license) browser
   # tree doesn't work so instead: exa (for folder colors), entr fzf fuse to restore from borgbase
   # wget (better than curl)
   # yq = https://github.com/mikefarah/yq Process YAML, JSON, XML, CSV and properties docs from the CLI
   # Also: borg, ncdu, github hadolint lazygit graphviz htop hub mc pwgen ripgrep zoxide

   # https://www.youtube.com/watch?v=2OHrTQVlRMg bat, ripgrep (rg cmd),
   # entr (run on change), zoxide (z instead of cd), mc (midnight commander)
   # https://graphviz.org/
   # pciutils  compile the pciutils package from source to get the lspci command on macOS.
   # DPCIManager open-source dspci command that behaves similar to lspci on Linux.

export FILE_EXT_BY_VSCODE=".json .md .py .sh .yml .yaml .zsh"
export VSCODE_EXT_FILE="vscode-ext.txt"   # "file"  Install/Upgrade VSCode extensions from/to file"
export VSCODE_EXT_URL="https://wilsonmar.github.io/docs/vscode-ext-231230.txt"
   # .txt open by TextEdit

#export GITHUB_REPO_URL=""
#export GITHUB_REPO_NAME=""
#export GITHUB_FOLDER=""
#export GITHUB_BRANCH="main"  # placeholder value

# Defined after creating a folder:
export GITHUB_ACCOUNT_FOLDER="github-wilsonmar"
export GITHUB_FOLDER_BASE="$HOME/github-wilsonmar"
#      GITHB_FOLDER_PATH="$HOME/github-wilsonmar/$GITHUB_FOLDER_NAME"
export GITHUB_DOCS_REPO="wilsonmar.github.io"
export GITHUB_BRANCH_DEFAULT="main"

export ENV_FOLDERPATH_DEFAULT="$HOME" # for override by -envf $ENV_FOLDERPATH
export ENV_FOLDERPATH="$HOME"

   # Within .gitconfig, this is set by "git config --global user.name"
      # [user]
      #    email = wilsonmar@gmail.com
      #    name = Wilson Mar
export GITHUB_USER_EMAIL="wilsonmar+github@gmail.com"  #
export GITHUB_USER_NAME="Wilson Mar"                   # -n
export GITHUB_USER_ACCOUNT="wilsonmar"                 # -gan
# export GITHUB_KEY_NAME="wilsonmar_241231"   # Gen'd as GITHUB_USER_ACCOUNT _ current date

export AKEYLESS_ADMIN_EMAIL="wilson_mar@gmail.com"
export AKEYLESS_ACCESS_ID="p-ovktoe5swyx0im"
export AKEYLESS_API_GW_URL=""
   # https://Your_GW_URL:8080
# exoirt AKEYLESS_TRUSTED_TLS_CERTIFICATE_FILE=""

export SPEEDTEST_SERVER_ID="25997"
export COMPUTER_NAME_PREFIX="Z8"

export USB_DRIVE_NAME="HP-USB-4GB"
export DISTRO_TO_USE="debian"

export KRAFTCLOUD_TOKEN="akeyless:/mac-setup/KRAFTCLOUD_TOKEN"
export KRAFTKIT_METRO="fra0"
   # fra0 = Frankfurt see Available Metros https://docs.kraft.cloud/metros/

# For aiac.dev at https://github.com/gofireflyio/aiac
# At
export OPENAI_API_KEY="akeyless:/mac-setup/OPENAI_API_KEY"
export PLAYWRIGHT_SERVICE_ACCESS_TOKEN="akeyless:/mac-setup/PLAYWRIGHT_SERVICE_ACCESS_TOKEN"
# See https://wilsonmar.github.io/flood-the-internet#Playwright
export PLAYWRIGHT_SERVICE_URL=wss://eastus.api.playwright.microsoft.com/api/authorize/connectSession
export PLAYWRIGHT_SERVICE_ACCESS_TOKEN="/akeyless:/mac-setup/PLAYWRIGHT_SERVICE_ACCESS_TOKEN"
export BRASTEN_API="akeyless:/mac-setup/BRASTEN_API"

# See https://developers.cloudflare.com/cloudflare-one/api-terraform/access-with-terraform/
export CLOUDFLARE_EMAIL="x@y.com"
export CLOUDFLARE_API_KEY="???"

# Defined after creating a folder:
export GOHOME='$HOME/golang1'   # this code  highly customized!

# IMPORTANT: Change these values to your own account:
export AWS_DEFAULT_REGION="us-west-2"
   # See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
export AWS_ACCOUNT_ID="akeyless:/mac-setup/AWS_ACCOUNT_ID"
export AWS_ACCESS_KEY_ID="akeyless:/mac-setup/AWS_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="akeyless:/mac-setup/AWS_SECRET_ACCESS_KEY"

# See https://github.com/JamesWoolfenden/pike/tree/master/terraform/azurerm
# And https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_client_secret
# See https://wilsonmar.github.io/azure-onboarding/#service-principal
export ARM_CLIENT_ID="akeyless:/mac-setup/ARM_CLIENT_ID"
export ARM_CLIENT_SECRET="akeyless:/mac-setup/ARM_CLIENT_SECRET"
export ARM_TENANT_EMAIL="jetbloom@hotmail.com"
export ARM_TENANT_ID="akeyless:/mac-setup/ARM_TENANT_ID"
export ARM_SUBSCRIPTION_NAME="Azure subscription 1"
# https://portal.azure.com/#view/Microsoft_Azure_Billing/SubscriptionsBlade (Free trial)
export ARM_SUBSCRIPTION_ID="" # 7a0bbbfc-a36d-4d73-bbaf-e381b82397c6"
# https://portal.azure.com/#home
export AZURE_SUBSCRIPTION_EMAIL=jetbloom@hotmail.com
# https://account.microsoft.com/?ref=MeControl&refd=portal.azure.com
export AZURE_DOMAIN=jetbloomhotmail.onmicrosoft.com
# https://portal.azure.com/#settings/directory
export AZURE_DIRECTORY_ID="" # "39020964-5f96-4d36-a89b-5ea0f7614e72"
# See https://wilsonmar.github.io/azure-quickly
export AZURE_REGION="us-west-2"
export AZURE_LOCATION="westus"
export AZURE_RESC_GROUP="rg-name"
export AZURE_RESC_NAME="rg-name"
export AZURE_WORKSPACE="my-workspace"

# See https://wilsonmar.github.io/gcp
export GCP_PROJECT=""

export CHEZMOI_CONFIG_FILE="~/.config/chezmoi/chezmoi.toml"
export CHEZMOI_FOLDERPATH="~/.local/share/chezmoi"

# see https://github.com/stoffee/terraform-hcp-vault-eks/blob/fix_readme_indents/README.md
export HCP_CLIENT_ID=""
export HCP_CLIENT_SECRET=""
export VAULT_ADDR="http:localhost:8200"
#export VAULT_ADDR="https://vault.mycorp.com:8200"
export VAULT_SKIP_VERIFY=true
   # see https://github.com/hashicorp/vault-guides/blob/master/operations/local-replication/README.md

#   IRON_TOKEN="" # from https://hud-e.iron.io/signup (15 day trial)
#   IRON_PROJECT_ID="" # "helloworld1" from https://hud-e.iron.io/ settings page

#   SAUCE_USERNAME=""
#   SAUCE_ACCESS_KEY=""

# END